#include <algorithm>
#include <sstream>
#include <vector>
#include <gtest/gtest.h>
#include <pqc/pqc.h>
#include <random>
extern "C" {
    #include "sign/dilithium/dilithium2/clean/reduce.h"
    #include "sign/dilithium/dilithium2/clean/poly.h"
    #include "sign/dilithium/dilithium2/clean/params.h"
    #include "common/utils.h"
}

TEST(KEM,OneOff) {

    for (int i=0; i<PQC_ALG_KEM_MAX; i++) {
        const pqc_ctx_t *p = pqc_kem_alg_by_id(i);

        std::vector<uint8_t> ct(pqc_ciphertext_bsz(p));
        std::vector<uint8_t> ss1(pqc_shared_secret_bsz(p));
        std::vector<uint8_t> ss2(pqc_shared_secret_bsz(p));
        std::vector<uint8_t> sk(pqc_private_key_bsz(p));
        std::vector<uint8_t> pk(pqc_public_key_bsz(p));

        ASSERT_TRUE(
            pqc_keygen(p, pk.data(), sk.data()));
        ASSERT_TRUE(
            pqc_kem_encapsulate(p, ct.data(), ss1.data(), pk.data()));
        ASSERT_TRUE(
            pqc_kem_decapsulate(p, ss2.data(), ct.data(), sk.data()));
        ASSERT_TRUE(
            std::equal(ss1.begin(), ss1.end(), ss2.begin()));
    }
}

TEST(SIGN,OneOff) {

    std::random_device rd;
    std::uniform_int_distribution<uint8_t> dist(0, 0xFF);
    uint8_t msg[1234] = {0};

    for (int i=0; i<PQC_ALG_SIG_MAX; i++) {
        const pqc_ctx_t *p = pqc_sig_alg_by_id(i);
        // generate some random msg
        for (auto &x : msg) {x = dist(rd);}

        std::vector<uint8_t> sig(pqc_signature_bsz(p));
        std::vector<uint8_t> sk(pqc_private_key_bsz(p));
        std::vector<uint8_t> pk(pqc_public_key_bsz(p));

        ASSERT_TRUE(
            pqc_keygen(p, pk.data(), sk.data()));
        uint64_t sigsz = sig.size();
        ASSERT_TRUE(
            pqc_sig_create(p, sig.data(), &sigsz, msg, 1234, sk.data()));
        ASSERT_TRUE(
            pqc_sig_verify(p, sig.data(), sigsz, msg, 1234, pk.data()));
    }
}

TEST(KEMSIG,PrintSizes) {

    for (int i=0; i<PQC_ALG_SIG_MAX; i++) {
        std::stringstream out;
        const pqc_ctx_t *p = pqc_sig_alg_by_id(i);
        out << std::setw(30) << std::left << p->alg_name
            << " :pk: "   << std::setw(15) << pqc_public_key_bsz(p)
            << " :sign: " << std::setw(15) << pqc_signature_bsz(p);
        std::cout << out.str() << std::endl;
    }


    for (int i=0; i<PQC_ALG_KEM_MAX; i++) {
        std::stringstream out;
        const pqc_ctx_t *p = pqc_kem_alg_by_id(i);
        out << std::setw(30) << std::left << p->alg_name
            << " :pk: " << std::setw(15) << pqc_public_key_bsz(p)
            << " :ct: " << std::setw(15) << pqc_ciphertext_bsz(p);
        std::cout << out.str() << std::endl;
    }
}

TEST(Dilithium, MontREDC) {
    ASSERT_EQ(PQCLEAN_DILITHIUM2_CLEAN_montgomery_reduce(0), 0);
    ASSERT_EQ(PQCLEAN_DILITHIUM2_CLEAN_montgomery_reduce(Q), 0);
    ASSERT_EQ(PQCLEAN_DILITHIUM2_CLEAN_montgomery_reduce(Q*100), 0);
    ASSERT_EQ(PQCLEAN_DILITHIUM2_CLEAN_montgomery_reduce(1), -114592);
    ASSERT_EQ(PQCLEAN_DILITHIUM2_CLEAN_montgomery_reduce(-1), 114592);
    ASSERT_EQ(PQCLEAN_DILITHIUM2_CLEAN_montgomery_reduce(((uint64_t)Q<<31)-1), 114592);
    ASSERT_EQ(PQCLEAN_DILITHIUM2_CLEAN_montgomery_reduce(-((int64_t)Q<<31)),0);
    ASSERT_EQ(PQCLEAN_DILITHIUM2_CLEAN_montgomery_reduce(-((1ULL<<31)*(int64_t)Q)+1), -114592);
    ASSERT_EQ(PQCLEAN_DILITHIUM2_CLEAN_montgomery_reduce(-(((int64_t)Q)<<31)+1), -114592);
    ASSERT_EQ(PQCLEAN_DILITHIUM2_CLEAN_montgomery_reduce((uint64_t)1<<15), -523840);
    ASSERT_EQ(PQCLEAN_DILITHIUM2_CLEAN_montgomery_reduce((uint64_t)1<<31), 4190209);
    ASSERT_EQ(PQCLEAN_DILITHIUM2_CLEAN_montgomery_reduce(3347556), 2070606);
    ASSERT_EQ(PQCLEAN_DILITHIUM2_CLEAN_montgomery_reduce(-2581810), 910169);
}

TEST(Dilithium, PolyZ) {
    std::random_device rd;
    std::uniform_int_distribution<int32_t> dist_z(-((1<<17)-1), 1<<17);
    uint8_t out[576];

    poly p1, p2;
    for (auto &x : p1.coeffs) { x = dist_z(rd); }
    PQCLEAN_DILITHIUM2_CLEAN_polyz_pack(out, &p1);
    PQCLEAN_DILITHIUM2_CLEAN_polyz_unpack(&p2, out);

    for (size_t j=0; j<256; j++) {
        ASSERT_EQ(p1.coeffs[j], p2.coeffs[j]);
    }
}

void print_buf(unsigned char *c, size_t l) {
    for (size_t i=0; i<l; i++) {
        printf("0x%02X, ", c[i]);
    }
    printf("\n");
}

TEST(Dilithim2, Sign) {
    uint8_t msg[20] = {0};
    const pqc_ctx_t *p = pqc_sig_alg_by_id(PQC_ALG_SIG_DILITHIUM2);

    std::vector<uint8_t> sig(pqc_signature_bsz(p));
    std::vector<uint8_t> sk(pqc_private_key_bsz(p));
    std::vector<uint8_t> pk(pqc_public_key_bsz(p));

    ASSERT_TRUE(
        pqc_keygen(p, pk.data(), sk.data()));
    uint64_t sigsz = sig.size();
    ASSERT_TRUE(
        pqc_sig_create(p, sig.data(), &sigsz, msg, sizeof msg, sk.data()));
    ASSERT_TRUE(
        pqc_sig_verify(p, sig.data(), sigsz, msg, sizeof msg, pk.data()));
}

TEST(Dilithim2, Verify) {
    uint8_t msg[20] = {0};
// Incorrect
//    std::vector<uint8_t> sig_exp = {
//        0x85, 0xAD, 0xD2, 0xFF, 0xDE, 0x15, 0x20, 0x56, 0x1B, 0xE1, 0xE6, 0x01, 0x5E, 0x34, 0x70, 0x26, 0xE5, 0xC4, 0xD9, 0x89, 0x48, 0xD8, 0x83, 0x88, 0x27, 0xEB, 0xA2, 0xD2, 0x44, 0x35, 0x8A, 0x5E, 0xA5, 0xEA, 0x42, 0x23, 0x08, 0xFE, 0xC4, 0x66, 0x6D, 0x81, 0x9A, 0xA8, 0x1C, 0xF6, 0x05, 0x35, 0x59, 0x8E, 0x3E, 0x31, 0x9D, 0xE3, 0x46, 0xBD, 0x75, 0xD9, 0x1C, 0x7B, 0xE7, 0xD5, 0x1D, 0x8E, 0x82, 0x7C, 0x2D, 0x1E, 0x56, 0x58, 0x9D, 0xF0, 0x8D, 0x29, 0xEF, 0xE9, 0x22, 0x23, 0xE8, 0xEF, 0xC1, 0xDB, 0x38, 0x89, 0x75, 0xB6, 0xED, 0x67, 0x41, 0x18, 0x22, 0x46, 0x70, 0x45, 0xE3, 0x23, 0x6E, 0xD9, 0x63, 0x4F, 0xD4, 0xA7, 0x8E, 0xA9, 0xA2, 0x7E, 0x38, 0xB3, 0xA8, 0x3C, 0xCC, 0x64, 0x0E, 0x43, 0xC8, 0x4F, 0x78, 0x1D, 0xD1, 0x4A, 0xE2, 0x34, 0xE8, 0x51, 0x8B, 0xE4, 0xA9, 0xC5, 0x41, 0x76, 0xC3, 0x0C, 0x78, 0x10, 0x77, 0xCF, 0x6B, 0x4C, 0xDC, 0x01, 0xE1, 0x3C, 0x7E, 0x90, 0x29, 0xD1, 0x4C, 0x85, 0x96, 0x03, 0xB7, 0xB7, 0xCA, 0x67, 0x27, 0x2B, 0x74, 0x30, 0x37, 0xFD, 0x25, 0x4B, 0xF4, 0x44, 0x3B, 0xDA, 0x84, 0x4C, 0xEE, 0xD7, 0x1D, 0x59, 0x91, 0xAA, 0x1A, 0xCD, 0xD3, 0x70, 0xD7, 0xD1, 0x56, 0xBF, 0x72, 0x4F, 0xE0, 0x86, 0x97, 0x54, 0x1A, 0x0E, 0x64, 0x81, 0x8C, 0x71, 0x3A, 0xA5, 0x20, 0x88, 0x32, 0x3C, 0xEE, 0x2E, 0x1D, 0xD2, 0x78, 0x18, 0x44, 0x37, 0x6E, 0x79, 0xED, 0x41, 0xF0, 0xFA, 0xBA, 0xA6, 0xE1, 0xCF, 0x86, 0x72, 0x46, 0x5F, 0x96, 0x5F, 0x89, 0xF3, 0x46, 0xDC, 0x12, 0x6A, 0xC0, 0x16, 0x8D, 0xFD, 0x97, 0xFD, 0x5D, 0x50, 0xFB, 0xA9, 0x7F, 0x01, 0x7C, 0x6A, 0x2D, 0x96, 0xEB, 0xBF, 0x02, 0x98, 0x16, 0xE4, 0x98, 0x79, 0x34, 0x76, 0x50, 0x8C, 0x3C, 0x04, 0x72, 0x0C, 0xA5, 0xC4, 0x82, 0xBE, 0xB6, 0x0E, 0xC6, 0x11, 0x37, 0xB5, 0xD5, 0x1D, 0x35, 0xF6, 0xD4, 0x59, 0x15, 0x26, 0x0D, 0x03, 0x7C, 0xF9, 0xC7, 0xA8, 0x48, 0x0D, 0xA1, 0xCC, 0x3B, 0xF1, 0x92, 0x9A, 0x89, 0xC5, 0x83, 0xD5, 0xC2, 0x46, 0x76, 0xE7, 0x39, 0xED, 0xC3, 0xC0, 0xF6, 0xD5, 0x7B, 0xD4, 0x06, 0xBB, 0x44, 0xA5, 0x12, 0x6D, 0x2E, 0x0B, 0xE6, 0x85, 0x80, 0x80, 0xB2, 0xE9, 0x18, 0xBD, 0x66, 0x24, 0x89, 0xA6, 0xF0, 0x58, 0x11, 0x44, 0x63, 0x86, 0x40, 0xAD, 0x93, 0xB6, 0x29, 0x50, 0xA6, 0xC4, 0x5F, 0x2C, 0x04, 0x0B, 0x71, 0x15, 0x42, 0x0A, 0x56, 0x77, 0x75, 0xBD, 0xDB, 0x2F, 0x66, 0x54, 0x00, 0x61, 0x70, 0x90, 0x97, 0x55, 0x27, 0xC6, 0x55, 0x48, 0xD5, 0xCF, 0xBB, 0x82, 0x8D, 0x6D, 0x67, 0x7F, 0x97, 0xA0, 0xDA, 0x18, 0xEC, 0x1C, 0x32, 0x50, 0x52, 0x0F, 0x87, 0x6C, 0x36, 0x94, 0x99, 0xCD, 0xDB, 0x10, 0x2D, 0x89, 0xAB, 0xF7, 0xDA, 0x83, 0xC4, 0x8D, 0xB3, 0x0D, 0xB2, 0x5D, 0x08, 0x34, 0x0C, 0x42, 0x4C, 0x18, 0x6B, 0x23, 0x2A, 0xE6, 0x47, 0x76, 0xC5, 0xC9, 0x2E, 0x45, 0x04, 0xBD, 0x11, 0x62, 0xFC, 0x52, 0x21, 0x69, 0x16, 0x82, 0x53, 0x42, 0xAF, 0x39, 0x98, 0x8F, 0xC6, 0xE1, 0x06, 0x7D, 0xB1, 0x24, 0x67, 0x90, 0xEE, 0xAE, 0xAA, 0x0F, 0xC8, 0xF0, 0x23, 0x50, 0x12, 0x34, 0x39, 0xD0, 0xB9, 0xA5, 0x0F, 0x45, 0x74, 0x08, 0xF3, 0x69, 0x43, 0xA6, 0x91, 0x1C, 0x87, 0x35, 0xD8, 0xB5, 0xFD, 0xEC, 0x40, 0x87, 0x12, 0x26, 0x07, 0xB6, 0x84, 0x17, 0x16, 0x1A, 0xBB, 0x5A, 0xDC, 0xF1, 0x80, 0x28, 0x8F, 0x6D, 0xF8, 0x5F, 0x97, 0x8E, 0x9A, 0x4E, 0x0E, 0xA4, 0xC7, 0x01, 0x10, 0xB8, 0x5F, 0xA8, 0x64, 0x76, 0xC4, 0x2E, 0xE3, 0x90, 0x16, 0x32, 0x75, 0x85, 0xD8, 0x4D, 0x8F, 0xF1, 0xD2, 0xA5, 0x37, 0x21, 0xE3, 0xB2, 0x70, 0xF9, 0xCE, 0xCD, 0xF9, 0x51, 0x4D, 0xC6, 0xE6, 0xC9, 0xE9, 0xA5, 0x6C, 0x7A, 0xE1, 0xD0, 0xCD, 0xBD, 0xA3, 0x5D, 0xC3, 0x67, 0xF5, 0x9B, 0xAC, 0x1C, 0xB9, 0x60, 0xEC, 0x53, 0x48, 0xEF, 0x01, 0x03, 0x6F, 0x5E, 0x4D, 0x98, 0x2A, 0x34, 0x97, 0xEC, 0xD4, 0x7D, 0x0E, 0x32, 0x58, 0x61, 0xCA, 0x12, 0x35, 0x71, 0x6A, 0x43, 0xCD, 0x6F, 0x8C, 0xA6, 0x01, 0xA3, 0x93, 0x82, 0x7E, 0xE1, 0xB1, 0xA1, 0x6C, 0xC6, 0xDA, 0xC5, 0xB4, 0x98, 0x95, 0x4C, 0x58, 0x00, 0x43, 0x7F, 0x1E, 0x14, 0x91, 0x36, 0xF2, 0x31, 0xB1, 0xE7, 0x49, 0x6D, 0x7A, 0xA5, 0x34, 0x17, 0x62, 0xB3, 0xBB, 0xC5, 0x6B, 0xF8, 0x53, 0xF6, 0x70, 0x07, 0x2D, 0x83, 0x8C, 0xA7, 0xCA, 0xBC, 0x70, 0x9D, 0x89, 0x1E, 0x5E, 0xF7, 0x5C, 0xF4, 0x11, 0x62, 0x95, 0x75, 0x9A, 0x78, 0xB5, 0x04, 0x2B, 0x8A, 0x3C, 0x29, 0xF5, 0x59, 0xEF, 0xDB, 0x68, 0x59, 0x8D, 0x89, 0x6B, 0x52, 0x5B, 0xF2, 0x0C, 0xFC, 0x69, 0x85, 0x5D, 0x29, 0xA0, 0xB9, 0xFD, 0xC9, 0xCD, 0x75, 0xEC, 0x36, 0x69, 0xAD, 0xD7, 0xAD, 0xDD, 0xA5, 0xB9, 0x57, 0x3C, 0x4F, 0xBB, 0x84, 0x75, 0x80, 0xD5, 0x74, 0x88, 0x8A, 0x7F, 0xA9, 0x04, 0x84, 0xDA, 0xA4, 0xC3, 0xB8, 0x24, 0x64, 0x6A, 0x2D, 0x30, 0x0F, 0xC7, 0x47, 0x79, 0xFB, 0xC1, 0x75, 0x58, 0x22, 0xF9, 0xA7, 0xD8, 0xD1, 0x5A, 0x07, 0x3E, 0xAC, 0xA8, 0xB0, 0x99, 0xDC, 0xF6, 0xC2, 0x9E, 0xDC, 0xF6, 0x48, 0x77, 0xE4, 0x51, 0x3D, 0xFA, 0xFF, 0x3A, 0x41, 0x63, 0xA9, 0xA6, 0xF0, 0xCF, 0x59, 0xD2, 0x18, 0xC0, 0x41, 0x73, 0x30, 0xD4, 0x83, 0x01, 0xFC, 0x67, 0xD0, 0x48, 0xAB, 0xA1, 0xDC, 0x9D, 0xEB, 0x92, 0x03, 0xE0, 0xAA, 0x94, 0x1C, 0x24, 0xE6, 0x47, 0x54, 0xA4, 0xFB, 0x22, 0x28, 0x4D, 0x37, 0x5E, 0x2A, 0x69, 0x77, 0xE4, 0xDA, 0x9C, 0xB2, 0x7C, 0x11, 0xB2, 0xBA, 0x16, 0xD3, 0x56, 0xDC, 0x9C, 0x56, 0xB2, 0x63, 0x5F, 0xF0, 0x31, 0xFF, 0x45, 0x50, 0x5B, 0x1E, 0xE5, 0x46, 0x2B, 0x34, 0x48, 0x10, 0x40, 0xAE, 0x8F, 0xC6, 0x88, 0x25, 0xA6, 0x6D, 0x80, 0x3F, 0x5F, 0xCF, 0x92, 0xF4, 0x0A, 0xBC, 0xA8, 0x75, 0x58, 0xA2, 0xD3, 0x46, 0xEB, 0xDF, 0xDE, 0xC9, 0xFF, 0x4E, 0x99, 0x45, 0x15, 0x61, 0xA7, 0xED, 0x74, 0xD9, 0x94, 0xDF, 0x83, 0x86, 0xFE, 0xFF, 0xA9, 0x2E, 0x6B, 0x4C, 0xC7, 0x02, 0x82, 0x9E, 0x80, 0x80, 0x21, 0xBD, 0xB8, 0x43, 0x3C, 0x83, 0x95, 0xA9, 0x19, 0x57, 0xE5, 0x9E, 0xFC, 0x8D, 0x6E, 0xEE, 0x7D, 0x7E, 0x56, 0x89, 0xC8, 0x2E, 0x17, 0x10, 0x6A, 0x0D, 0x3F, 0x05, 0x39, 0xC5, 0x2C, 0xB2, 0x6D, 0x7D, 0x41, 0xF6, 0x23, 0x91, 0xF0, 0x06, 0xCF, 0xAF, 0x83, 0x68, 0x28, 0xA1, 0xBB, 0x0A, 0x66, 0x5A, 0x89, 0x85, 0x24, 0x3F, 0x7B, 0x4E, 0x06, 0x8A, 0x37, 0xE9, 0x2F, 0xAE, 0x65, 0xEA, 0x4C, 0xBE, 0x5A, 0x53, 0x08, 0x84, 0xDD, 0xFE, 0xEA, 0x31, 0x5A, 0x71, 0x30, 0xB4, 0x2D, 0xD7, 0xD4, 0x0D, 0xA1, 0x4A, 0xC0, 0x0A, 0x16, 0x6D, 0x0C, 0x7A, 0xC6, 0x1C, 0x67, 0x82, 0x7A, 0x57, 0x90, 0xAC, 0x94, 0x8E, 0xFC, 0x58, 0x6E, 0x67, 0x1D, 0x86, 0x89, 0x97, 0x8D, 0x8C, 0x45, 0xA8, 0x27, 0x05, 0x88, 0xED, 0x22, 0x11, 0xE8, 0x10, 0xEE, 0x00, 0x2F, 0xE3, 0x14, 0x06, 0x74, 0x2D, 0x8A, 0x78, 0x78, 0xA3, 0x65, 0x44, 0x3C, 0x91, 0x34, 0x8C, 0x4B, 0xFB, 0x26, 0x7C, 0x31, 0xC7, 0x95, 0x35, 0x27, 0x34, 0x4C, 0xA0, 0xD8, 0xB5, 0x94, 0xAA, 0x24, 0x3A, 0xDB, 0x06, 0xE9, 0x8B, 0xDA, 0xB7, 0xBA, 0x00, 0xD7, 0xF7, 0xC9, 0x53, 0xBD, 0x2C, 0x65, 0x52, 0x41, 0x73, 0xF5, 0x1B, 0xDC, 0xD2, 0xDD, 0x7F, 0xCA, 0x82, 0xFF, 0x6F, 0x7E, 0x1F, 0x59, 0x39, 0x57, 0xBF, 0x6E, 0x06, 0x8E, 0x3E, 0x80, 0xB0, 0x89, 0x25, 0x40, 0xBA, 0xBD, 0xD1, 0x14, 0x48, 0x2C, 0x33, 0x31, 0xF5, 0x0E, 0x13, 0x36, 0xB9, 0x75, 0x9B, 0x16, 0x54, 0x0D, 0xE7, 0xF6, 0xFA, 0xC0, 0x74, 0x0E, 0xF3, 0x1F, 0x2A, 0xB1, 0xE3, 0xF5, 0xB8, 0x8B, 0xA2, 0xC7, 0x3C, 0xA3, 0x95, 0x28, 0x1F, 0x8C, 0x74, 0xD7, 0x5E, 0x69, 0x36, 0xAA, 0xFD, 0x83, 0x19, 0xC7, 0x4D, 0x7D, 0xA7, 0x48, 0xAD, 0x0F, 0xBF, 0x5D, 0x24, 0x50, 0x4F, 0x6F, 0x7B, 0x56, 0x62, 0xBB, 0xA8, 0x84, 0xB2, 0xF0, 0x41, 0xB6, 0x20, 0x6B, 0x64, 0xAC, 0xDB, 0x09, 0xEA, 0x6A, 0x89, 0x85, 0x4D, 0xF1, 0xCC, 0xB7, 0x94, 0x17, 0xA3, 0x54, 0x84, 0xD7, 0x2F, 0xBF, 0x71, 0xC6, 0xC9, 0x2C, 0xCE, 0xB1, 0xAF, 0xBF, 0x5D, 0x44, 0x24, 0x23, 0x1D, 0xAA, 0xA5, 0x23, 0x99, 0x68, 0x19, 0xFA, 0xCB, 0xF9, 0x7A, 0xB6, 0xC2, 0xD1, 0x50, 0xD7, 0xE8, 0xC8, 0x27, 0x8E, 0x78, 0x27, 0x32, 0x08, 0xA1, 0xF3, 0x9C, 0x27, 0xEA, 0xBA, 0x3E, 0xC4, 0x18, 0xD6, 0xC8, 0x45, 0x55, 0x48, 0x73, 0x10, 0x1C, 0xB6, 0x34, 0x5E, 0x8A, 0x2D, 0x22, 0xFA, 0xF8, 0xC2, 0x9D, 0x00, 0x3A, 0x7C, 0xD5, 0xC7, 0x42, 0xC8, 0x13, 0x3E, 0x28, 0x9C, 0x1A, 0xCC, 0x11, 0x3E, 0x8D, 0xC3, 0xC2, 0xA4, 0x91, 0xCB, 0x94, 0xA3, 0x71, 0x1F, 0x51, 0xDC, 0x4D, 0x23, 0x8B, 0xBE, 0xCF, 0xCB, 0x48, 0x67, 0xC2, 0x3C, 0x87, 0xA3, 0xFE, 0x78, 0xBF, 0xC9, 0x49, 0x06, 0xFC, 0x8B, 0xC8, 0xD0, 0x31, 0x5F, 0x3A, 0xAF, 0x6C, 0x6E, 0x04, 0xBE, 0x15, 0xC4, 0x86, 0xB3, 0x7F, 0x79, 0x08, 0xDC, 0x64, 0xBA, 0x6D, 0xD0, 0x50, 0x16, 0x5E, 0xF0, 0x05, 0x11, 0xE3, 0x63, 0x2A, 0x7C, 0x36, 0x6A, 0x05, 0x97, 0x32, 0xF5, 0xDF, 0x56, 0x2D, 0x4A, 0x05, 0xC3, 0x4D, 0xC2, 0xCC, 0x91, 0x2E, 0x33, 0x65, 0x30, 0x44, 0x6A, 0xC7, 0xE0, 0x36, 0xE6, 0xAF, 0x50, 0x33, 0x73, 0xC3, 0x42, 0x36, 0x19, 0xAE, 0x41, 0xE7, 0x7F, 0x6B, 0xC9, 0x15, 0xC6, 0x2F, 0xCE, 0xBE, 0x6E, 0x7F, 0x0E, 0x58, 0x86, 0xF8, 0x19, 0x21, 0xF3, 0x19, 0x9F, 0x22, 0x9D, 0xB6, 0x07, 0xC1, 0xB6, 0x81, 0x9F, 0x8E, 0xF0, 0xB9, 0x18, 0x87, 0x5E, 0x6D, 0xF2, 0x41, 0x46, 0x53, 0x8B, 0x43, 0xD5, 0x84, 0x08, 0xE4, 0x8A, 0x66, 0x37, 0x67, 0x09, 0x09, 0x91, 0x0B, 0xD8, 0xAB, 0x75, 0x89, 0x61, 0xB1, 0xBC, 0x75, 0xC9, 0xF3, 0x33, 0xDF, 0xCB, 0x6D, 0xF1, 0xEA, 0xD7, 0xB7, 0x4A, 0x00, 0x20, 0x29, 0x2F, 0x05, 0xAE, 0x0D, 0xDD, 0x01, 0xE1, 0x1D, 0x06, 0x8B, 0x70, 0x6D, 0x7E, 0x32, 0xC4, 0x2D, 0x28, 0x21, 0xF6, 0xC4, 0x7E, 0xC2, 0x42, 0x9E, 0xC9, 0xCA, 0xFB, 0x66, 0x78, 0x19, 0x53, 0xE0, 0xB9, 0x1E, 0x1D, 0xBD, 0xB4, 0x23, 0x55, 0x51, 0xDF, 0x27, 0xB5, 0xA1, 0xF4, 0xCE, 0xD5, 0xB5, 0x2E, 0x38, 0x98, 0x12, 0x5C, 0x4A, 0x23, 0x9D, 0x20, 0x8A, 0xFC, 0xC7, 0xD3, 0xA4, 0x18, 0x47, 0x8B, 0x85, 0xDC, 0xD0, 0xC8, 0x19, 0x05, 0x1F, 0xFD, 0x29, 0xC8, 0x93, 0xF0, 0xC6, 0xA0, 0x2F, 0xF6, 0x01, 0x2A, 0x24, 0x60, 0x32, 0x82, 0x61, 0xC9, 0x5F, 0x8C, 0x5C, 0xBB, 0xDA, 0x21, 0x6C, 0x4A, 0x63, 0x6A, 0x02, 0x39, 0xC5, 0xBB, 0xFF, 0x7F, 0x76, 0xC9, 0x57, 0xA7, 0x0A, 0x4A, 0x4E, 0x49, 0x9F, 0x46, 0xFD, 0x23, 0x33, 0xD3, 0x53, 0x43, 0x98, 0x07, 0x56, 0x59, 0x13, 0x4B, 0x0A, 0xF1, 0xA0, 0xAA, 0xB8, 0x3F, 0xF0, 0x99, 0x5B, 0x9F, 0x20, 0xFB, 0xF5, 0x78, 0xD7, 0xE2, 0x36, 0x35, 0x70, 0xA1, 0xE3, 0x9D, 0xDA, 0x0B, 0x64, 0x91, 0xB4, 0xA7, 0xF1, 0x5F, 0xCE, 0x02, 0xE9, 0xF6, 0x14, 0x74, 0x9E, 0xDD, 0xF0, 0x1C, 0x8A, 0x95, 0x9A, 0x59, 0x8F, 0x45, 0x5B, 0x58, 0x2E, 0x49, 0xBB, 0x4E, 0x64, 0xC5, 0xF0, 0x01, 0xAE, 0x10, 0x98, 0x5E, 0x4F, 0x0F, 0x0A, 0xED, 0x23, 0x3A, 0x35, 0x7E, 0x32, 0xE5, 0x0B, 0x07, 0xC9, 0xA4, 0x46, 0x29, 0x3B, 0xA6, 0x0E, 0xD5, 0x9F, 0x42, 0xD3, 0x48, 0xE1, 0x7B, 0xD5, 0x69, 0xAC, 0xDB, 0x75, 0x50, 0xE8, 0x75, 0x63, 0x29, 0x92, 0x87, 0x91, 0xCA, 0x9B, 0xCF, 0xD2, 0x98, 0x0D, 0x07, 0x03, 0x6A, 0xB3, 0x12, 0x06, 0xFA, 0x1C, 0xAC, 0x57, 0x1F, 0x7D, 0x20, 0xD9, 0x61, 0x71, 0xB9, 0x4F, 0xFE, 0xCB, 0x35, 0x10, 0x6B, 0x38, 0xAF, 0x4C, 0x7C, 0xF6, 0x79, 0x2F, 0x5E, 0x9E, 0x38, 0x14, 0xFD, 0x6C, 0x1C, 0x60, 0x31, 0x08, 0x6F, 0x0D, 0xFC, 0x59, 0x3C, 0x47, 0x1B, 0x31, 0x01, 0xEC, 0xF7, 0xD3, 0x1D, 0x7B, 0x40, 0x5E, 0x94, 0x00, 0x4A, 0xC3, 0x1C, 0x6C, 0x20, 0xAA, 0xDE, 0x2C, 0x6D, 0xEA, 0x69, 0xCC, 0x4C, 0x0F, 0xDD, 0x94, 0x54, 0xDC, 0xD0, 0x93, 0x67, 0x94, 0x00, 0x67, 0x56, 0xB7, 0xD1, 0xD4, 0x37, 0xFB, 0x10, 0x1C, 0xD8, 0x56, 0x26, 0x35, 0xCD, 0x6A, 0x6B, 0xEB, 0x85, 0x4C, 0x4B, 0xF8, 0xD5, 0x57, 0xD7, 0xDE, 0x02, 0x08, 0x3C, 0xE9, 0x87, 0x35, 0x62, 0x40, 0x26, 0x50, 0xBC, 0x28, 0x5C, 0x67, 0xF6, 0xFC, 0xC2, 0x68, 0x4A, 0xD2, 0x1A, 0x6B, 0x6E, 0xBC, 0xB4, 0xB3, 0x3C, 0x3D, 0x12, 0x6D, 0x7A, 0xBE, 0x2D, 0x9D, 0xAC, 0x43, 0x1A, 0xAE, 0x2C, 0xB3, 0xA7, 0x43, 0x54, 0x4A, 0x11, 0x7C, 0x5C, 0xC9, 0xD1, 0xBC, 0xC8, 0xE6, 0xE0, 0xB0, 0x2C, 0xD8, 0xE8, 0x16, 0x1F, 0x8D, 0x55, 0xF5, 0x9C, 0xC7, 0x34, 0x01, 0x44, 0xB6, 0x8A, 0xE4, 0x12, 0x17, 0xDA, 0xAA, 0xBF, 0xB2, 0xAC, 0xC0, 0x1F, 0x8C, 0x72, 0x21, 0x36, 0x26, 0x24, 0x01, 0x7F, 0x54, 0x90, 0x9B, 0xC1, 0xF2, 0x05, 0x3B, 0xFB, 0xF1, 0x8A, 0xA3, 0xC0, 0x9A, 0xEF, 0xF7, 0x34, 0x8E, 0xD3, 0x5B, 0xBB, 0xBD, 0x34, 0x3F, 0x56, 0xCA, 0xF9, 0xFF, 0x96, 0xF3, 0xF9, 0x0A, 0x57, 0x11, 0xAD, 0x25, 0xAE, 0x60, 0xA8, 0x8C, 0x38, 0xDF, 0x56, 0xD5, 0x8A, 0xA6, 0xDE, 0x0D, 0x39, 0xF0, 0x1B, 0x1B, 0x74, 0xCD, 0x25, 0x02, 0x86, 0x48, 0x16, 0xE7, 0xC5, 0xDE, 0xD6, 0x1F, 0x21, 0xFF, 0x60, 0x25, 0x88, 0xFB, 0x64, 0xAD, 0x7B, 0x77, 0xB2, 0xAE, 0xC4, 0x2C, 0x3D, 0xD8, 0x68, 0x72, 0xAC, 0xE2, 0xF5, 0x25, 0xD9, 0xE1, 0xCD, 0x88, 0x7B, 0x0C, 0xF1, 0xF7, 0xEF, 0xBD, 0x9A, 0x09, 0x62, 0xF1, 0x4B, 0xC3, 0x0B, 0x3F, 0xA0, 0x8A, 0x0D, 0x2A, 0x59, 0x1E, 0x9C, 0x89, 0x57, 0xC1, 0x72, 0x05, 0xCF, 0x8C, 0xB0, 0x8A, 0xCC, 0x63, 0x5F, 0xE4, 0xD9, 0xD7, 0xBB, 0xDA, 0x5D, 0x45, 0xF5, 0x70, 0x5A, 0x91, 0xEF, 0xC4, 0x71, 0x2E, 0x4B, 0x4C, 0x23, 0x2C, 0xCD, 0xAD, 0x4C, 0x9D, 0x35, 0xC8, 0x57, 0x35, 0xFC, 0x75, 0x91, 0x76, 0x0C, 0x2E, 0xB5, 0x75, 0xD0, 0xBC, 0xC8, 0xFA, 0xD7, 0xDF, 0x7D, 0x5B, 0x80, 0xC7, 0xD3, 0x19, 0x54, 0x90, 0x3F, 0xD8, 0x96, 0xEB, 0x9D, 0x77, 0xF6, 0xF6, 0xC7, 0x69, 0x29, 0xBA, 0xD5, 0x9F, 0xD7, 0x8B, 0x66, 0xB7, 0x4E, 0x43, 0xAC, 0xBE, 0x57, 0xF4, 0x69, 0xA5, 0x04, 0x6F, 0x26, 0x31, 0xCA, 0x60, 0xCB, 0xE5, 0xE7, 0x39, 0x93, 0x5E, 0x5A, 0xB1, 0x98, 0x2A, 0x2C, 0xE2, 0x0F, 0x83, 0x1D, 0xB3, 0x3F, 0xE8, 0xAC, 0xC4, 0x3D, 0x3B, 0x12, 0xA1, 0x53, 0xED, 0xCF, 0xBF, 0x8C, 0xE7, 0x84, 0xA1, 0x13, 0x19, 0x7A, 0xA2, 0xB8, 0xE4, 0xA9, 0x24, 0xA8, 0x62, 0xD0, 0xD1, 0x45, 0x72, 0x6C, 0x7A, 0xC5, 0xEC, 0x44, 0x10, 0x9D, 0x0C, 0xBA, 0xD2, 0x62, 0x0F, 0x5E, 0x20, 0xCA, 0x2C, 0x7A, 0xBD, 0xC2, 0x6B, 0x9A, 0xC5, 0xC7, 0xF0, 0xA5, 0xBC, 0x51, 0xDF, 0x0F, 0x44, 0x88, 0x08, 0x7B, 0x63, 0x7A, 0x37, 0x69, 0x2E, 0x97, 0x7E, 0xE7, 0x18, 0x06, 0x70, 0x8E, 0x1D, 0x16, 0xC5, 0x9C, 0x52, 0x25, 0x80, 0xC6, 0x98, 0x62, 0x09, 0xDA, 0xC2, 0xC8, 0x4A, 0xE9, 0x60, 0x8D, 0xF0, 0xD4, 0xE9, 0x5D, 0x78, 0x51, 0xDC, 0x68, 0xAF, 0xB8, 0xA1, 0x97, 0x30, 0x23, 0x98, 0xDC, 0x74, 0xF4, 0x63, 0x8C, 0xA4, 0x4E, 0x88, 0xF6, 0xCC, 0xB6, 0xB8, 0xE1, 0x74, 0x59, 0xD8, 0xE6, 0x9F, 0x8E, 0xEA, 0x6D, 0xC1, 0x8A, 0xC6, 0x36, 0x1A, 0x24, 0xED, 0xE6, 0xD8, 0x0A, 0xC2, 0xAB, 0xA6, 0xEB, 0xB5, 0x2E, 0xFC, 0x49, 0x80, 0xED, 0x7B, 0x91, 0xB7, 0x92, 0x3C, 0x1C, 0x95, 0xD5, 0xB6, 0xF7, 0xF9, 0x2E, 0x9E, 0x5C, 0x4B, 0x93, 0x73, 0x06, 0x93, 0xE0, 0x0A, 0xE5, 0xF8, 0x9A, 0xD1, 0xE5, 0x65, 0xFD, 0x09, 0x88, 0x71, 0xDE, 0xEB, 0xF9, 0x2F, 0xA0, 0xBC, 0xB5, 0x3E, 0x22, 0x3B, 0xAC, 0x3A, 0x1C, 0x31, 0x17, 0x83, 0xC7, 0xD6, 0xB1, 0x95, 0x73, 0xF6, 0xCC, 0x24, 0x97, 0xC6, 0x36, 0x0A, 0x59, 0xD3, 0x1B, 0xF9, 0x95, 0x8D, 0xBA, 0x4B, 0xE3, 0x4D, 0x91, 0x8A, 0x9A, 0x16, 0x34, 0xEB, 0xBF, 0x0A, 0x22, 0x28, 0x4A, 0xD1, 0x93, 0x31, 0xD9, 0x5A, 0xD4, 0xD4, 0x73, 0x17, 0x95, 0xA4, 0x11, 0x03, 0xE2, 0x52, 0xFD, 0x25, 0x96, 0xF1, 0x00, 0x54, 0x68, 0xF6, 0xC8, 0xB0, 0x5F, 0x35, 0x08, 0xA4, 0x95, 0xEA, 0x0A, 0x41, 0x09, 0xEC, 0x0F, 0x30, 0xAF, 0x13, 0xF4, 0x8C, 0x10, 0x2C, 0x49, 0x70, 0x80, 0x8B, 0xA3, 0xB6, 0xD5, 0xF8, 0x01, 0x19, 0x54, 0x55, 0x9B, 0xA3, 0xBD, 0xE3, 0xE6, 0xEA, 0xF4, 0xF6, 0xFB, 0xFE, 0x12, 0x13, 0x21, 0x4A, 0x68, 0x7E, 0x80, 0x81, 0xC6, 0xF0, 0xF3, 0xF5, 0xF6, 0xFC, 0xFD, 0x02, 0x15, 0x31, 0x47, 0x4A, 0x52, 0x60, 0x88, 0x9C, 0x9D, 0xA6, 0xB1, 0xB5, 0xE7, 0xEA, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0A, 0x18, 0x27, 0x37
//    };
    std::vector<uint8_t> sig;
    const pqc_ctx_t *p = pqc_sig_alg_by_id(PQC_ALG_SIG_DILITHIUM2);
    sig.resize(pqc_signature_bsz(p));
    static const uint8_t pk[] = {
        0xBD, 0x4A, 0x64, 0xAD, 0x59, 0x5B, 0x7C, 0x03, 0x8B, 0xC5, 0x06, 0xAD, 0xB1, 0xC7, 0x64, 0x17, 0x7A, 0xF6, 0x1C, 0x96, 0x57, 0x27, 0x63, 0x63, 0x6C, 0x18, 0x55, 0xB4, 0xDA, 0xB2, 0x67, 0xD0, 0x3A, 0xC4, 0x60, 0x80, 0x63, 0xC9, 0x58, 0x9D, 0x21, 0x1C, 0x13, 0x06, 0x42, 0x15, 0xE3, 0xC4, 0xED, 0x21, 0x38, 0x25, 0xD6, 0x4C, 0x71, 0x8E, 0x48, 0xD8, 0x2D, 0x90, 0xBA, 0x4E, 0x82, 0x24, 0x48, 0xA2, 0x29, 0x80, 0x35, 0x96, 0x58, 0xB4, 0x10, 0x86, 0xC5, 0x63, 0xFE, 0xBC, 0xBD, 0x60, 0xE1, 0x98, 0xB8, 0xA7, 0x4F, 0x08, 0xEA, 0xC8, 0xB2, 0x38, 0x05, 0xB4, 0x78, 0xFE, 0x65, 0xE7, 0xC6, 0xF2, 0x34, 0xF0, 0x4A, 0x39, 0x6C, 0x09, 0xB2, 0x87, 0x58, 0xF8, 0x09, 0x9B, 0x38, 0x46, 0x89, 0xB2, 0x07, 0x1F, 0x1A, 0x9B, 0x12, 0xCC, 0xFB, 0x51, 0x27, 0xB5, 0xDB, 0xBA, 0xA1, 0x67, 0xD0, 0xF9, 0x36, 0x1B, 0xEF, 0x4D, 0xC3, 0xCD, 0x24, 0xD5, 0x2B, 0x20, 0x52, 0x55, 0x4E, 0x27, 0x75, 0xD3, 0x56, 0x5B, 0x98, 0x7E, 0x91, 0xD6, 0x3D, 0x91, 0x5A, 0x00, 0xA7, 0xC9, 0xDF, 0x4D, 0x5C, 0xA0, 0xB9, 0x18, 0xBC, 0x4E, 0x19, 0xBB, 0x8A, 0x33, 0x1B, 0x2A, 0x8F, 0xBE, 0x87, 0xB9, 0x15, 0x49, 0x69, 0x22, 0x16, 0x0C, 0x31, 0x9C, 0x22, 0xBB, 0xDA, 0xF1, 0x4F, 0x93, 0xA0, 0x94, 0x9A, 0x08, 0x6F, 0x43, 0x6D, 0xF7, 0x28, 0xA7, 0x7D, 0x32, 0x22, 0xFD, 0x1B, 0x10, 0x06, 0x5F, 0xFE, 0x87, 0xA1, 0x4C, 0x36, 0x20, 0x91, 0x2D, 0x5C, 0xAC, 0x9A, 0x3C, 0x0A, 0x57, 0x65, 0x48, 0x17, 0x42, 0x64, 0xF7, 0xC4, 0xE4, 0x69, 0xC1, 0x5D, 0x85, 0xFE, 0xC2, 0xCC, 0x5E, 0x50, 0xC3, 0x8B, 0x3A, 0xD6, 0x8E, 0x76, 0x97, 0xC4, 0x38, 0x5B, 0x5E, 0x3C, 0xCA, 0x89, 0x69, 0xFF, 0xFD, 0xE5, 0xB0, 0xF0, 0x2D, 0xA2, 0xCC, 0x2F, 0xD2, 0xD7, 0xC7, 0x86, 0xBF, 0x56, 0xD9, 0xA0, 0x54, 0x31, 0xEC, 0xAA, 0x28, 0x6E, 0x20, 0xBE, 0xA9, 0x48, 0x65, 0xA2, 0x3C, 0xE9, 0x71, 0x21, 0xDD, 0x4B, 0xB4, 0xA1, 0xCD, 0xE9, 0x07, 0xA7, 0x6B, 0x67, 0x3D, 0x12, 0x3E, 0x78, 0x30, 0x6C, 0x13, 0xD4, 0xE1, 0x9C, 0xE9, 0x0E, 0x87, 0x52, 0x1C, 0x2C, 0xA4, 0xD4, 0x2F, 0x17, 0xB9, 0x9E, 0x7C, 0xF5, 0x60, 0x82, 0xB8, 0x6E, 0x78, 0x7A, 0xAF, 0x19, 0x5B, 0x47, 0xC7, 0x3F, 0x9E, 0xB7, 0x8E, 0x03, 0xBE, 0xA4, 0x58, 0x5C, 0xD5, 0x7E, 0x7C, 0x0F, 0x3F, 0x54, 0x56, 0x76, 0xF4, 0x96, 0x48, 0x7A, 0x85, 0x50, 0x5A, 0xC8, 0x00, 0x0C, 0x9C, 0x6E, 0x38, 0xCC, 0xB8, 0x2B, 0x58, 0x9B, 0x03, 0xC6, 0x39, 0x6F, 0xD8, 0xEA, 0x1F, 0xB9, 0xBF, 0x24, 0x09, 0x31, 0x74, 0x5B, 0x80, 0xE8, 0xE7, 0x6B, 0x41, 0x26, 0xD6, 0x8D, 0x3D, 0x58, 0x66, 0x31, 0xBB, 0x3A, 0x9B, 0x64, 0xF5, 0x89, 0x31, 0x42, 0x32, 0xF6, 0xD1, 0x7B, 0x61, 0x14, 0x98, 0xC4, 0xDB, 0xD8, 0xEF, 0x65, 0x9D, 0x44, 0x66, 0x87, 0xA8, 0xE0, 0x0A, 0xEE, 0x76, 0xCC, 0x16, 0xC9, 0x54, 0xBA, 0x85, 0x26, 0xD1, 0x50, 0xAF, 0xA1, 0x48, 0x62, 0xEC, 0x93, 0xCB, 0x1F, 0x0A, 0x6C, 0x0E, 0xE1, 0xE9, 0xCE, 0xC4, 0x74, 0x2C, 0x33, 0xAC, 0x4E, 0xD3, 0x91, 0x62, 0x95, 0x40, 0xB8, 0x43, 0xD8, 0x91, 0x45, 0xBF, 0x5F, 0x1C, 0xCD, 0x25, 0x67, 0xF5, 0x83, 0x81, 0xCD, 0x84, 0x88, 0x9E, 0x8A, 0x48, 0x9C, 0xF1, 0xAA, 0x39, 0x0B, 0x92, 0xF6, 0xEE, 0xE8, 0xA8, 0xCC, 0x5F, 0x94, 0xF8, 0xFB, 0x78, 0x0D, 0x48, 0xC6, 0x66, 0xE2, 0x4F, 0xC5, 0x73, 0xE9, 0x8B, 0xD9, 0x88, 0x01, 0x13, 0x86, 0x44, 0x06, 0x38, 0x6C, 0x80, 0xD4, 0x82, 0x32, 0x72, 0xE7, 0x02, 0x55, 0x7D, 0x77, 0x4A, 0x5C, 0x6C, 0xF3, 0xA9, 0x8D, 0x7A, 0xBC, 0xA5, 0x03, 0x98, 0xC3, 0x39, 0x7E, 0xA4, 0xD8, 0xE3, 0xAF, 0x41, 0x10, 0xEE, 0x1F, 0x16, 0xCF, 0x6F, 0xEF, 0x7C, 0xED, 0xE6, 0x12, 0x03, 0x40, 0xE4, 0x1C, 0x15, 0xE1, 0x02, 0xA2, 0x5F, 0x51, 0xD0, 0x63, 0x2C, 0x09, 0x4A, 0x14, 0x2B, 0x8A, 0xBC, 0x30, 0xAC, 0xB8, 0xA1, 0xF2, 0xEE, 0x34, 0x3C, 0xF0, 0x31, 0x43, 0x91, 0xAD, 0xD0, 0x69, 0xA3, 0x45, 0x4B, 0x28, 0xDA, 0x65, 0x12, 0x94, 0x82, 0xE3, 0x1F, 0xEE, 0x10, 0x38, 0xF5, 0x62, 0x1A, 0x09, 0x4D, 0x85, 0x63, 0xAD, 0xF8, 0x66, 0xC1, 0x23, 0x25, 0xE1, 0x75, 0x69, 0xEC, 0xB2, 0x3E, 0x92, 0x00, 0x88, 0x66, 0xA9, 0xB8, 0xC8, 0x44, 0x42, 0x4A, 0xF9, 0x6B, 0x62, 0xEC, 0x50, 0x83, 0x6E, 0xC7, 0xFA, 0xA0, 0x95, 0xF0, 0x0E, 0xB6, 0xFD, 0x93, 0xA3, 0x3D, 0x57, 0x8C, 0x07, 0xF9, 0x1C, 0xC8, 0xCB, 0x16, 0x28, 0x49, 0xFC, 0xA4, 0x83, 0x96, 0x97, 0x59, 0x98, 0x6E, 0x1E, 0x9D, 0xFC, 0x8F, 0x0C, 0x0F, 0xBF, 0xC9, 0xC1, 0xEB, 0xF0, 0x5A, 0x40, 0x35, 0xAA, 0x9D, 0x60, 0x6D, 0xC9, 0xBF, 0x98, 0xB4, 0xCF, 0x5D, 0x66, 0x5E, 0x45, 0x8C, 0x63, 0x0E, 0xD6, 0x4F, 0x0E, 0xCE, 0x31, 0xA8, 0x3C, 0xBD, 0xB3, 0x97, 0xC3, 0x3B, 0x11, 0xDC, 0x84, 0x7F, 0xE1, 0x2D, 0xA7, 0x49, 0xC0, 0xA4, 0x7C, 0x58, 0xA8, 0x9B, 0x49, 0x42, 0xB0, 0x63, 0xF0, 0x61, 0xAB, 0xEE, 0x8E, 0xA0, 0x52, 0xF7, 0xBE, 0x90, 0xD0, 0x90, 0x93, 0x6D, 0xB2, 0x3C, 0xA5, 0x3F, 0x23, 0x8D, 0xA2, 0xF9, 0xE3, 0xD4, 0xDA, 0xCB, 0x03, 0xF3, 0x82, 0x55, 0xDC, 0xC0, 0x4B, 0x07, 0xF3, 0xC0, 0x50, 0x2C, 0x6B, 0x00, 0x63, 0xB2, 0x89, 0x14, 0xB8, 0xF8, 0x60, 0x11, 0xAE, 0xDF, 0x90, 0xDC, 0x5C, 0xE8, 0x91, 0x98, 0x04, 0x8E, 0xC5, 0x58, 0xA8, 0xD1, 0x5A, 0x8F, 0x47, 0x92, 0x51, 0x43, 0x85, 0x1B, 0xB8, 0x71, 0xE0, 0x49, 0x41, 0xE5, 0x28, 0x7B, 0x34, 0x7C, 0x2E, 0x6B, 0x8D, 0x03, 0x62, 0x49, 0xB8, 0x85, 0xCD, 0xBC, 0x60, 0xCB, 0xE4, 0x32, 0x17, 0x3E, 0x4D, 0xD6, 0xD1, 0x22, 0x73, 0x99, 0xA8, 0xAE, 0xD4, 0x8E, 0x09, 0x71, 0x15, 0x0C, 0x15, 0xA0, 0xB6, 0x1B, 0xFA, 0x33, 0x81, 0x9C, 0xC7, 0xBC, 0xD9, 0x2B, 0x54, 0xB1, 0x5A, 0x34, 0x80, 0x76, 0x7D, 0x93, 0xE5, 0xDD, 0xFA, 0xF5, 0x49, 0x8B, 0x40, 0x00, 0x4F, 0x52, 0x41, 0x89, 0x89, 0x74, 0x90, 0x3C, 0xDF, 0xB2, 0x71, 0x67, 0xD4, 0x66, 0x44, 0xBF, 0x1F, 0xBB, 0x9D, 0xB9, 0xA5, 0x1C, 0x9A, 0x99, 0x98, 0x0E, 0xF0, 0xF7, 0xE2, 0x31, 0xC1, 0x4B, 0x4A, 0x5C, 0x8E, 0x7A, 0x45, 0xFB, 0xF7, 0x08, 0x67, 0xBF, 0xC4, 0xE9, 0x4C, 0x6B, 0xD7, 0x3F, 0xD5, 0x37, 0x18, 0xF9, 0xBA, 0x55, 0x15, 0x70, 0x18, 0x68, 0xE7, 0xF1, 0x54, 0x08, 0xC2, 0x5F, 0x5E, 0x51, 0x99, 0xDC, 0x9D, 0x77, 0x10, 0xDD, 0x51, 0xD0, 0x2A, 0x66, 0x02, 0x17, 0x9C, 0xC0, 0x03, 0x09, 0x0E, 0x9D, 0x4F, 0xA3, 0x0A, 0x22, 0x21, 0x50, 0x14, 0x66, 0xE9, 0x2E, 0x47, 0x9C, 0xAB, 0x2A, 0x72, 0xE6, 0x85, 0x87, 0xCB, 0x89, 0xC0, 0x95, 0xC9, 0x08, 0xE0, 0x91, 0x5F, 0xC2, 0x02, 0x52, 0x03, 0x6E, 0x10, 0x09, 0xEF, 0x60, 0x10, 0xA5, 0xFF, 0x75, 0x0A, 0xB9, 0x9B, 0xF7, 0x09, 0x5D, 0x8D, 0x7C, 0x49, 0x5A, 0x81, 0x76, 0xD2, 0x93, 0x56, 0xB8, 0xA3, 0xE0, 0x93, 0x2A, 0xD7, 0x39, 0x4B, 0x2F, 0x81, 0xAB, 0xFD, 0xE0, 0xF2, 0x73, 0x25, 0x0A, 0x46, 0x80, 0xF8, 0x66, 0xFC, 0x52, 0xE2, 0x25, 0x92, 0xE6, 0x6A, 0x0E, 0x0F, 0xF5, 0x28, 0xD3, 0x70, 0xA8, 0xFD, 0x35, 0xD0, 0xD5, 0x38, 0x9F, 0xCC, 0x49, 0xB4, 0x70, 0x7C, 0x55, 0x2C, 0x55, 0x1E, 0xF1, 0xF2, 0xA3, 0xC3, 0x1C, 0xBF, 0xC6, 0x18, 0xDB, 0x16, 0x1E, 0x86, 0x17, 0x29, 0x56, 0x40, 0xCE, 0xC9, 0xF3, 0xE2, 0x0E, 0x27, 0xE6, 0xEF, 0x24, 0x2F, 0x94, 0x86, 0x11, 0x54, 0x0F, 0x72, 0x33, 0x50, 0x6A, 0x6D, 0x6C, 0x6E, 0x5A, 0xF0, 0xA7, 0x19, 0xB9, 0x64, 0x69, 0x6E, 0x1F, 0x1F, 0x13, 0x7F, 0x1E, 0xDE, 0xFA, 0x09, 0xAB, 0x5D, 0x01, 0x2C, 0x84, 0xA7, 0x93, 0xA1, 0x4C, 0x3E, 0x73, 0xE8, 0x8C, 0x05, 0x1A, 0x76, 0xC6, 0x2C, 0x93, 0x33, 0x4C, 0x99, 0xDD, 0xFC, 0x41, 0xD7, 0x9A, 0xED, 0xC5, 0x2A, 0x23, 0xA1, 0x1D, 0x69, 0x73, 0xFF, 0x0C, 0xC7, 0x1F, 0x6E, 0x97, 0x42, 0xC0, 0x06, 0xD8, 0x55, 0xB3, 0xAA, 0xB4, 0xE2, 0xEB, 0xE1, 0x92, 0x9C, 0xEB, 0xE4, 0x9E, 0xC3, 0xFC, 0x4C, 0xE9, 0x7A, 0xFC, 0x97, 0x7F, 0xFF, 0x4E, 0x6E, 0x51, 0xAA, 0x07, 0xE0, 0x28, 0x1E, 0x9C, 0xF2, 0xE7, 0x7D, 0x19, 0xB6, 0x2A, 0xFC, 0xBA, 0x50, 0xBD, 0x92, 0xA9, 0x2D, 0xB0, 0xD0, 0x0D, 0x3A, 0xEE, 0xD6, 0x2E, 0x98, 0x42, 0x34, 0x73, 0x2D, 0xC4, 0xD4, 0x97, 0x91, 0xF4, 0xF7, 0x63, 0xC4, 0xB9, 0xD7, 0x79, 0xC2, 0x14, 0xAF, 0x70, 0x73, 0xC3, 0xFC, 0x4D, 0x5A, 0xEF, 0x29, 0xFD, 0x89, 0x30, 0x6A, 0xCE, 0x41, 0x15, 0xF7, 0xDE, 0x21, 0xBD, 0x66, 0x73, 0x02, 0x2C, 0x8F, 0xE5, 0xA7, 0xBA, 0x5A, 0x04, 0xE8, 0xB7, 0x9F, 0xB9, 0xBD, 0xAE, 0x49, 0x49, 0xE1, 0xE8, 0xC2, 0x4B, 0x19, 0x02, 0x77, 0xBD, 0xD1, 0xC0, 0xD8, 0xCC, 0xD0, 0xCC, 0xFA, 0xFA, 0xC6, 0x18, 0x82, 0x61, 0x55, 0x60, 0x0F, 0xCF, 0xCE, 0x69, 0x60, 0xD7, 0x69, 0x3E, 0x0F, 0x23, 0x12, 0xE3, 0x8C, 0xE1, 0x7F, 0xE2, 0xE4, 0xE6, 0x54, 0xA0, 0xCD, 0x97, 0xA7, 0xBD, 0x76, 0x63, 0x40, 0x2D, 0x9B, 0x16, 0x8E, 0x47, 0x96, 0x84,
    };
    static const uint8_t sk[] = {
        0xBD, 0x4A, 0x64, 0xAD, 0x59, 0x5B, 0x7C, 0x03, 0x8B, 0xC5, 0x06, 0xAD, 0xB1, 0xC7, 0x64, 0x17, 0x7A, 0xF6, 0x1C, 0x96, 0x57, 0x27, 0x63, 0x63, 0x6C, 0x18, 0x55, 0xB4, 0xDA, 0xB2, 0x67, 0xD0, 0x89, 0x5A, 0x2C, 0x5E, 0x2C, 0x05, 0x26, 0x5C, 0x82, 0xD5, 0x2F, 0xCC, 0xFF, 0x12, 0x56, 0x11, 0xAA, 0xA8, 0x19, 0xE3, 0xD4, 0x2F, 0x84, 0xEE, 0xDA, 0x0E, 0xE3, 0xA4, 0x15, 0x3B, 0x47, 0x4A, 0x64, 0x81, 0xEC, 0x5A, 0x4E, 0xA1, 0xA7, 0x24, 0x66, 0x16, 0x6A, 0x57, 0x2A, 0x6E, 0xFC, 0x05, 0x32, 0x13, 0xC3, 0x8E, 0x11, 0xDC, 0x34, 0xB4, 0x27, 0x92, 0xA0, 0x20, 0x32, 0x9A, 0x28, 0x9E, 0x98, 0x38, 0x4E, 0x0B, 0xC5, 0x64, 0x4C, 0x08, 0x46, 0x22, 0x03, 0x84, 0x03, 0x14, 0x46, 0x1C, 0x24, 0x31, 0xDA, 0xA4, 0x51, 0x40, 0xA0, 0x80, 0x03, 0x46, 0x4E, 0xD8, 0x00, 0x64, 0x10, 0x46, 0x6D, 0x13, 0xB6, 0x4C, 0x84, 0xB6, 0x08, 0xE4, 0x20, 0x90, 0xC4, 0x34, 0x4C, 0x5A, 0x08, 0x92, 0x90, 0x80, 0x05, 0xD2, 0x12, 0x6A, 0x9B, 0xB2, 0x88, 0x9A, 0x36, 0x46, 0x00, 0x06, 0x51, 0x63, 0x86, 0x20, 0xDB, 0x14, 0x52, 0x12, 0x14, 0x69, 0x01, 0xB1, 0x05, 0x40, 0xC2, 0x21, 0x62, 0xB2, 0x70, 0x8C, 0x92, 0x80, 0xA4, 0x00, 0x0E, 0x19, 0xC3, 0x41, 0xCA, 0x88, 0x61, 0x20, 0x90, 0x28, 0xE3, 0x20, 0x26, 0x09, 0x25, 0x2D, 0x14, 0x91, 0x69, 0x21, 0x84, 0x88, 0x04, 0xB4, 0x81, 0xE3, 0xA0, 0x4C, 0x93, 0x34, 0x2C, 0x12, 0x42, 0x61, 0x04, 0x31, 0x0D, 0xE1, 0x48, 0x72, 0xC9, 0x30, 0x90, 0x10, 0xC0, 0x84, 0x48, 0x28, 0x4E, 0x44, 0x90, 0x6C, 0xCB, 0x00, 0x8C, 0x4A, 0x38, 0x49, 0x1A, 0xC8, 0x64, 0xD8, 0x12, 0x2E, 0x9A, 0x92, 0x29, 0xD3, 0x44, 0x6A, 0x5C, 0x84, 0x24, 0x59, 0x34, 0x04, 0x22, 0x05, 0x01, 0x24, 0x25, 0x29, 0xDB, 0xC4, 0x28, 0x53, 0x96, 0x04, 0x63, 0xB6, 0x8C, 0x1A, 0x08, 0x2D, 0x14, 0xC3, 0x0D, 0x0B, 0x38, 0x44, 0x5B, 0x80, 0x6C, 0x62, 0xB0, 0x8D, 0xD9, 0x42, 0x65, 0x9A, 0x00, 0x6C, 0x48, 0x10, 0x31, 0x21, 0x00, 0x8A, 0x24, 0x14, 0x51, 0xD2, 0xB2, 0x29, 0x93, 0x16, 0x80, 0xE4, 0x20, 0x45, 0xA2, 0x94, 0x91, 0x93, 0x06, 0x80, 0xD9, 0xB8, 0x49, 0x44, 0x24, 0x6E, 0x4A, 0x84, 0x91, 0x82, 0x80, 0x45, 0x12, 0x93, 0x08, 0x62, 0xB8, 0x2D, 0xC2, 0x10, 0x68, 0xD0, 0x82, 0x24, 0x4C, 0x18, 0x89, 0x21, 0x48, 0x31, 0x18, 0x23, 0x42, 0x42, 0x42, 0x80, 0x60, 0x36, 0x49, 0x8B, 0xA4, 0x28, 0xC1, 0x34, 0x42, 0x59, 0x32, 0x90, 0x5B, 0xC2, 0x01, 0xD1, 0x96, 0x65, 0x4B, 0x04, 0x00, 0x08, 0x86, 0x69, 0xE3, 0x46, 0x69, 0x1C, 0xB6, 0x85, 0x40, 0x02, 0x42, 0xE1, 0x12, 0x08, 0x81, 0xA0, 0x90, 0xE1, 0x82, 0x04, 0xE3, 0x18, 0x46, 0x80, 0x88, 0x10, 0xA2, 0x84, 0x30, 0xDC, 0x98, 0x49, 0x20, 0x97, 0x4C, 0x41, 0x18, 0x86, 0x1B, 0xB3, 0x91, 0x18, 0x41, 0x62, 0x49, 0x34, 0x41, 0x62, 0x28, 0x61, 0x4B, 0x06, 0x84, 0xC0, 0xA0, 0x71, 0x59, 0xB4, 0x45, 0x62, 0x90, 0x08, 0xC2, 0x24, 0x12, 0x64, 0x38, 0x04, 0x0B, 0x80, 0x68, 0x14, 0x32, 0x28, 0x40, 0xB4, 0x48, 0x0B, 0x26, 0x50, 0x54, 0x34, 0x2A, 0x03, 0x33, 0x41, 0x4A, 0xB2, 0x25, 0x1B, 0x28, 0x90, 0x08, 0x86, 0x4D, 0x1A, 0x25, 0x60, 0x01, 0x35, 0x10, 0xC3, 0x46, 0x0E, 0xA4, 0x40, 0x00, 0x8C, 0x10, 0x68, 0x90, 0x44, 0x81, 0x0A, 0x20, 0x82, 0x62, 0xB6, 0x25, 0x12, 0x37, 0x04, 0xE0, 0xB8, 0x41, 0x08, 0x34, 0x8A, 0xDC, 0x96, 0x68, 0xDB, 0x32, 0x0A, 0x11, 0x27, 0x66, 0x0B, 0xC9, 0x0D, 0x8B, 0x40, 0x22, 0x12, 0xC1, 0x85, 0x82, 0xA2, 0x25, 0x59, 0x82, 0x40, 0xD3, 0x02, 0x08, 0x18, 0xA6, 0x65, 0x11, 0xA8, 0x85, 0x02, 0x25, 0x65, 0x1A, 0xA8, 0x41, 0x93, 0x48, 0x60, 0x13, 0x36, 0x29, 0x8A, 0x26, 0x50, 0xA4, 0x24, 0x6D, 0xE3, 0x32, 0x24, 0xCB, 0x86, 0x08, 0x0B, 0x02, 0x29, 0x12, 0x29, 0x06, 0x01, 0x28, 0x04, 0x11, 0xB0, 0x91, 0x82, 0x36, 0x60, 0x03, 0x42, 0x92, 0x5A, 0x38, 0x02, 0x42, 0x38, 0x24, 0x59, 0x36, 0x84, 0xC3, 0x40, 0x42, 0x54, 0x04, 0x0A, 0x64, 0x14, 0x42, 0x1C, 0x46, 0x51, 0x08, 0x00, 0x88, 0x1C, 0x28, 0x51, 0x21, 0xC8, 0x25, 0x0B, 0x34, 0x46, 0x41, 0x28, 0x8E, 0x24, 0x09, 0x4D, 0x19, 0x22, 0x0D, 0x84, 0x26, 0x06, 0x11, 0xC0, 0x6C, 0x24, 0xB2, 0x20, 0xD1, 0xB6, 0x21, 0xA3, 0xB4, 0x85, 0x00, 0x43, 0x89, 0x13, 0x17, 0x22, 0x5C, 0x36, 0x6E, 0x1C, 0x02, 0x8E, 0x59, 0x16, 0x71, 0xC3, 0xA8, 0x88, 0x8A, 0x46, 0x25, 0x40, 0x82, 0x11, 0x92, 0x90, 0x69, 0x20, 0x49, 0x52, 0x1B, 0x49, 0x8C, 0x23, 0x17, 0x2C, 0x98, 0xB0, 0x0D, 0x51, 0x44, 0x8D, 0x1B, 0xB1, 0x10, 0x13, 0x15, 0x29, 0x8A, 0xC6, 0x64, 0xDA, 0x00, 0x08, 0x24, 0xB5, 0x8C, 0x18, 0x25, 0x42, 0x84, 0x44, 0x26, 0x50, 0xA2, 0x6C, 0xDB, 0x30, 0x11, 0x61, 0x02, 0x2E, 0x0A, 0x41, 0x0A, 0x40, 0xB8, 0x89, 0x9C, 0x26, 0x60, 0x61, 0xC6, 0x8C, 0xCA, 0x42, 0x04, 0x23, 0x88, 0x24, 0x80, 0x02, 0x00, 0xC3, 0x16, 0x82, 0xDB, 0x04, 0x92, 0x80, 0x98, 0x90, 0x53, 0x88, 0x10, 0xE1, 0x84, 0x70, 0xC0, 0x04, 0x0E, 0x54, 0xC6, 0x91, 0x54, 0x00, 0x66, 0xD4, 0x14, 0x46, 0x5C, 0xA8, 0x6D, 0x18, 0xA7, 0x08, 0x11, 0x42, 0x80, 0x58, 0x82, 0x10, 0x8A, 0x94, 0x89, 0x20, 0x08, 0x32, 0x1B, 0x83, 0x45, 0xC8, 0x22, 0x01, 0x24, 0x01, 0x86, 0x91, 0xC8, 0x80, 0xA4, 0x00, 0x26, 0x5C, 0x98, 0x89, 0x0C, 0xC4, 0x51, 0x19, 0x83, 0x60, 0x20, 0xA2, 0x6D, 0xC4, 0xC8, 0x8C, 0x01, 0x00, 0x28, 0x1B, 0xA8, 0x48, 0x22, 0x25, 0x31, 0xA3, 0x12, 0x65, 0xA0, 0x86, 0x09, 0x14, 0x92, 0x21, 0x58, 0xC0, 0x88, 0x91, 0x34, 0x06, 0x42, 0x88, 0x20, 0x0A, 0x12, 0x0D, 0x0B, 0x38, 0x00, 0x93, 0x96, 0x70, 0x21, 0x24, 0x71, 0x42, 0x40, 0x84, 0xD9, 0x32, 0x0E, 0x00, 0xA8, 0x0D, 0xDA, 0xB2, 0x04, 0x19, 0x83, 0x8D, 0x00, 0x11, 0x4E, 0x20, 0xB8, 0x11, 0x68, 0xD8, 0x08, 0xA5, 0x05, 0x8C, 0x8B, 0x7A, 0xB5, 0xF9, 0x73, 0x5B, 0xFE, 0xD0, 0x13, 0xEF, 0x0F, 0x73, 0x78, 0x41, 0x0E, 0x3A, 0x46, 0x29, 0x8D, 0x9F, 0xD8, 0x44, 0x51, 0x47, 0xCC, 0x7F, 0x93, 0x15, 0xA0, 0x0B, 0x0D, 0xFD, 0xC4, 0x0B, 0xE7, 0x19, 0x49, 0xEA, 0x51, 0xAD, 0x91, 0xA9, 0x53, 0x17, 0x6C, 0xDA, 0x06, 0x5F, 0xC6, 0xDC, 0xA6, 0xC5, 0xA8, 0x09, 0xFD, 0x3F, 0x68, 0xF7, 0x74, 0xEA, 0xEE, 0xDD, 0x86, 0x58, 0x08, 0xDF, 0xF6, 0xDD, 0x8C, 0x9E, 0x24, 0xD7, 0x7F, 0x98, 0x7B, 0x7B, 0x3B, 0x88, 0x07, 0xA8, 0x35, 0x5C, 0x20, 0x73, 0x5B, 0x84, 0x00, 0xF3, 0x3F, 0x95, 0xD9, 0xC9, 0xC5, 0x15, 0xC7, 0xB1, 0xB2, 0x08, 0x37, 0xDF, 0xAE, 0x64, 0x5D, 0x03, 0x25, 0x1A, 0xFF, 0xF4, 0x83, 0xE2, 0x54, 0xF8, 0xE9, 0xDF, 0xF4, 0x82, 0x40, 0x50, 0x58, 0xE2, 0x92, 0xA3, 0x24, 0xBD, 0xFD, 0x05, 0xE1, 0xB9, 0x26, 0x79, 0x92, 0x47, 0x5E, 0x05, 0x60, 0x96, 0x4F, 0x37, 0xE8, 0xC7, 0x06, 0xF2, 0x0D, 0x1F, 0xC3, 0x8B, 0xCC, 0x3A, 0x0B, 0xE3, 0xB6, 0xC5, 0x5F, 0x6E, 0x8D, 0x51, 0x36, 0x10, 0x74, 0x94, 0xB9, 0x47, 0xC7, 0x16, 0x33, 0x26, 0xE3, 0x71, 0xF2, 0x20, 0x6F, 0xE5, 0xB5, 0xA5, 0x36, 0x7E, 0x8A, 0x51, 0x37, 0xC5, 0xF8, 0x52, 0xCE, 0xD8, 0xE4, 0x26, 0xB7, 0x6C, 0x7A, 0xE2, 0x30, 0x77, 0xF9, 0xFC, 0xF1, 0xF3, 0xDE, 0x86, 0x33, 0x48, 0xE3, 0x25, 0x94, 0x9A, 0xB9, 0x08, 0x69, 0xC0, 0x36, 0x98, 0x7B, 0xDD, 0xB0, 0x33, 0x2F, 0xC2, 0x73, 0xE7, 0x16, 0x51, 0x36, 0xB5, 0xCE, 0x81, 0x68, 0x3B, 0xF6, 0xFD, 0x53, 0xD0, 0xD5, 0xCA, 0xA3, 0x20, 0x0E, 0x1A, 0x60, 0xEC, 0x54, 0xD2, 0xA0, 0x7B, 0xE5, 0xF7, 0xF3, 0x2A, 0xAE, 0xAE, 0x5F, 0xB4, 0xB0, 0xBB, 0x15, 0xF1, 0x63, 0x1E, 0x47, 0x6B, 0xA7, 0xEA, 0x62, 0xA5, 0xF9, 0xF5, 0xCE, 0xBF, 0xC9, 0x49, 0x67, 0x8B, 0x92, 0x2C, 0xE8, 0xDC, 0xE7, 0x0E, 0xA7, 0x1F, 0x1B, 0x0F, 0x14, 0x03, 0x82, 0x12, 0xD9, 0xE0, 0x11, 0x0B, 0x74, 0xA2, 0x4F, 0x5E, 0xA8, 0xD4, 0x91, 0xAF, 0xB5, 0x32, 0x35, 0x59, 0x61, 0xD6, 0x00, 0xAC, 0x64, 0x8E, 0x52, 0x6A, 0xA2, 0x10, 0x79, 0xD7, 0x2B, 0x33, 0x55, 0x70, 0x53, 0x80, 0x1B, 0x2C, 0x1C, 0x29, 0xD9, 0x58, 0x94, 0x1F, 0x6A, 0x18, 0x26, 0x3B, 0x7A, 0xC2, 0x48, 0xBD, 0x08, 0x29, 0xF8, 0x28, 0x5B, 0xE2, 0x4F, 0xFA, 0xCF, 0x57, 0xB4, 0xB5, 0x70, 0x9B, 0x34, 0xC2, 0x39, 0x65, 0xA8, 0xB6, 0x41, 0x2E, 0xD6, 0x29, 0x69, 0xC0, 0x3B, 0xA2, 0x1C, 0x60, 0x46, 0x4D, 0x99, 0x85, 0x7A, 0xD6, 0x1E, 0x51, 0xBB, 0xD9, 0xB6, 0xCC, 0x85, 0xF8, 0xD5, 0xC8, 0xD2, 0x84, 0xFB, 0xBA, 0xBC, 0xD4, 0x55, 0x81, 0x0D, 0x4E, 0x7A, 0x6A, 0x8A, 0x25, 0xF0, 0x61, 0x51, 0xB3, 0xA2, 0xD5, 0xE5, 0x1E, 0x40, 0x0F, 0x00, 0xF2, 0x36, 0xEE, 0xEA, 0xAD, 0x42, 0x7E, 0x30, 0x32, 0xF4, 0x59, 0x24, 0x82, 0xAE, 0x7E, 0x0C, 0x24, 0x39, 0x9B, 0xC2, 0xFA, 0x7C, 0xE9, 0xF3, 0x96, 0x69, 0xD5, 0xA8, 0x4E, 0x20, 0x96, 0x01, 0xF4, 0x5F, 0xBF, 0x21, 0x9E, 0xA9, 0x97, 0x70, 0x35, 0x58, 0x50, 0x23, 0x5A, 0xB6, 0x75, 0x05, 0xD0, 0x13, 0x72, 0xB6, 0xEC, 0x00, 0x46, 0xAE, 0x34, 0xED, 0x50, 0x0D, 0x17, 0x95, 0x35, 0x59, 0x21, 0x1A, 0x15, 0x6E, 0x0F, 0x30, 0x1D, 0xE4, 0xF2, 0x81, 0x75, 0xBE, 0x28, 0xC4, 0x97, 0x9F, 0x54, 0x00, 0x76, 0x92, 0x33, 0xDD, 0x79, 0xDA, 0xB1, 0xE6, 0xCF, 0x58, 0xBD, 0x15, 0xAF, 0xAB, 0x8E, 0x88, 0x3C, 0xC1, 0x4D, 0x0A, 0xE3, 0x55, 0xC0, 0xAB, 0x3C, 0x2B, 0x6F, 0x05, 0xCE, 0x48, 0xAC, 0x1B, 0xC6, 0xAD, 0x9C, 0x99, 0x2D, 0x63, 0x36, 0xEC, 0xEC, 0xA5, 0x51, 0xEE, 0x00, 0x75, 0x93, 0xD6, 0x70, 0xB8, 0xA2, 0xAF, 0x91, 0xC7, 0x87, 0x24, 0xB4, 0x89, 0xC5, 0x40, 0x31, 0xBD, 0x6C, 0xE9, 0xCD, 0x10, 0x25, 0x22, 0x3D, 0x6D, 0x9C, 0x93, 0x4F, 0x9C, 0xFD, 0x9A, 0x4B, 0x5C, 0xF1, 0xB2, 0x3B, 0xFB, 0xCA, 0x13, 0x58, 0x35, 0x2F, 0xEA, 0x7A, 0x0E, 0x1F, 0xA9, 0xEF, 0x16, 0xEC, 0xFC, 0x66, 0x19, 0x6E, 0x3E, 0x63, 0xCF, 0x7B, 0xE8, 0xDF, 0xA1, 0xC8, 0x15, 0x44, 0x6E, 0x9C, 0xDF, 0x99, 0xC0, 0xBD, 0xEB, 0x34, 0xC6, 0xC8, 0xBB, 0x82, 0x46, 0x5B, 0x4F, 0xD8, 0xDA, 0x9E, 0x6E, 0x79, 0x27, 0xD0, 0x0D, 0xE8, 0x75, 0xC7, 0xB3, 0xAC, 0x9B, 0x7A, 0xF7, 0x50, 0x2B, 0x68, 0x8B, 0xA2, 0x1F, 0x3F, 0x00, 0xA0, 0x31, 0x0F, 0xE4, 0x8D, 0x92, 0xBF, 0xD3, 0xBE, 0xB8, 0xEB, 0x8A, 0x23, 0x7A, 0x39, 0x91, 0x6C, 0x2E, 0x3D, 0xE0, 0xF3, 0xFB, 0xB9, 0x25, 0x24, 0x2C, 0xC2, 0x26, 0x25, 0x74, 0x08, 0x31, 0x21, 0xFF, 0x85, 0x4D, 0x84, 0xD4, 0xDB, 0x1C, 0x1C, 0x33, 0x81, 0xFD, 0x81, 0x5B, 0x3C, 0x43, 0x36, 0x3C, 0xFB, 0xC7, 0x82, 0x3D, 0xE0, 0xBC, 0xA0, 0x79, 0xB7, 0x4C, 0xEA, 0xCF, 0x2D, 0x5A, 0xBA, 0xCB, 0xB3, 0x0B, 0x83, 0xBF, 0x81, 0xA9, 0x51, 0x0A, 0x18, 0x43, 0x72, 0x29, 0x5E, 0x70, 0x91, 0x85, 0xB1, 0xF8, 0x02, 0x09, 0xF7, 0x6E, 0xAB, 0x04, 0x17, 0xF7, 0xF4, 0x85, 0xCB, 0x91, 0x6D, 0x5E, 0x6A, 0x6A, 0x5A, 0x98, 0x19, 0xEA, 0xDF, 0x9F, 0x1B, 0x82, 0xD0, 0x3A, 0x18, 0x82, 0xF7, 0xA4, 0x3D, 0xCC, 0x77, 0x95, 0xCD, 0x74, 0xD8, 0x58, 0x05, 0xEB, 0x95, 0x24, 0x14, 0xF2, 0xB0, 0xB5, 0x02, 0x56, 0x01, 0x2D, 0xA4, 0x6E, 0x96, 0x6E, 0xC8, 0x1B, 0x57, 0x5F, 0xEF, 0x0B, 0x33, 0x96, 0x3C, 0xD3, 0xCA, 0x60, 0x97, 0xB6, 0x12, 0xE6, 0x3B, 0x8A, 0xBF, 0xCF, 0x95, 0x8C, 0xA6, 0x56, 0x54, 0xBE, 0x07, 0x5A, 0xC6, 0xA9, 0xDE, 0x44, 0x09, 0xCD, 0x56, 0x6B, 0x34, 0xD9, 0xA4, 0x79, 0x80, 0x8B, 0xA1, 0x0B, 0x86, 0x97, 0x7E, 0x3B, 0x4F, 0xE1, 0xA0, 0xE8, 0x83, 0x02, 0xB2, 0xE1, 0xC9, 0xE4, 0x20, 0x6E, 0x9D, 0x8E, 0xA3, 0xD2, 0xC0, 0x6C, 0xD4, 0xA2, 0x1C, 0x08, 0x90, 0x51, 0x5A, 0x08, 0x64, 0x45, 0xF3, 0xF7, 0x69, 0x80, 0x48, 0xF0, 0xD8, 0xB0, 0xAF, 0x02, 0x73, 0xBE, 0xFD, 0xB0, 0xC5, 0x76, 0xCF, 0x43, 0xA0, 0xCE, 0xE2, 0x15, 0x83, 0x5F, 0xD6, 0xF4, 0x9F, 0x36, 0x7D, 0xB1, 0xA9, 0xBB, 0xE6, 0x13, 0xAA, 0x8E, 0xA7, 0x38, 0x13, 0x39, 0x56, 0x28, 0x12, 0xEC, 0xF4, 0x2F, 0x73, 0x3B, 0x51, 0x61, 0x01, 0x42, 0xAD, 0x59, 0x83, 0x4C, 0xFA, 0x4B, 0x0B, 0x7C, 0xF0, 0x9E, 0xB8, 0x04, 0x34, 0x47, 0x45, 0x1E, 0x81, 0x4E, 0x70, 0x8B, 0xA4, 0x07, 0xA9, 0x13, 0x46, 0xAD, 0xFA, 0x5B, 0x3C, 0x33, 0x7B, 0xE3, 0xB0, 0x6B, 0xEF, 0x6D, 0x7B, 0x39, 0x13, 0xDD, 0xBC, 0xA2, 0x19, 0x40, 0xE9, 0x44, 0x50, 0xA9, 0x7F, 0x75, 0xAB, 0xBD, 0xE7, 0x6F, 0xA9, 0x7E, 0x50, 0x03, 0x41, 0x26, 0x64, 0x6C, 0xB1, 0x59, 0xE2, 0xFF, 0x06, 0xE7, 0x35, 0x25, 0x2A, 0x9C, 0x53, 0x33, 0x38, 0x68, 0x52, 0x8B, 0x51, 0x03, 0xA4, 0x8B, 0x96, 0x6D, 0xD8, 0x5D, 0x32, 0xF1, 0x26, 0x45, 0xAD, 0x24, 0x73, 0x14, 0x02, 0xEA, 0x46, 0xD6, 0x53, 0x0B, 0x1C, 0x3F, 0x5D, 0x53, 0xAC, 0x36, 0x69, 0x27, 0x65, 0xBE, 0x6D, 0x81, 0xB0, 0x83, 0x5F, 0x0A, 0x51, 0x2C, 0xFF, 0x64, 0xE4, 0xAB, 0x0A, 0x09, 0x6C, 0x50, 0x50, 0xB8, 0x0D, 0x26, 0xBE, 0x53, 0xF7, 0x07, 0xD0, 0x3A, 0xF0, 0x4B, 0x17, 0x01, 0x75, 0x24, 0x37, 0xAF, 0x3B, 0x93, 0xCE, 0x17, 0x43, 0x34, 0xE8, 0x7E, 0xB7, 0xA1, 0x19, 0xA3, 0x40, 0xC6, 0x97, 0x34, 0xD9, 0x7C, 0xBD, 0xB4, 0x98, 0xE5, 0x5A, 0x61, 0x53, 0x39, 0x3A, 0xBA, 0xAB, 0xE2, 0x84, 0x65, 0x43, 0xC8, 0x2B, 0xF0, 0x0D, 0xA8, 0x21, 0x1F, 0x19, 0xAE, 0x54, 0xD1, 0x1E, 0xC7, 0x30, 0xBD, 0x7E, 0x5C, 0x4D, 0x81, 0x04, 0xC8, 0x83, 0x8F, 0x7F, 0x99, 0xD0, 0x49, 0x3B, 0x08, 0x71, 0xB2, 0x2E, 0x02, 0x88, 0xC7, 0xF8, 0x9D, 0xB4, 0xB3, 0x0E, 0xEF, 0xE4, 0x0D, 0x7B, 0x66, 0x27, 0x2A, 0xBF, 0x4C, 0x32, 0xBF, 0x7B, 0x53, 0x4F, 0xB5, 0x4F, 0x6C, 0xD1, 0x82, 0xD6, 0xE8, 0x0F, 0xA4, 0x90, 0x94, 0xA9, 0xEE, 0x00, 0x42, 0x30, 0x27, 0x5A, 0x51, 0x5D, 0x77, 0x31, 0x2B, 0x12, 0x3E, 0xD6, 0x31, 0x50, 0x1E, 0xC1, 0xBF, 0xC4, 0x22, 0x1F, 0xA0, 0xBC, 0xF4, 0xDF, 0x4C, 0xE7, 0xF0, 0xF6, 0x3D, 0x79, 0x27, 0x98, 0xF1, 0x84, 0xDC, 0x6A, 0x63, 0x35, 0x30, 0xC9, 0x52, 0xC9, 0x7F, 0xC6, 0x3B, 0x62, 0x0E, 0x2C, 0x2A, 0xE7, 0xEE, 0x78, 0xC3, 0xE7, 0x85, 0x0B, 0x65, 0xC5, 0x9E, 0x79, 0x37, 0x50, 0x60, 0x8B, 0xBB, 0x6F, 0x5C, 0xFB, 0x3B, 0xB3, 0x23, 0x2E, 0x80, 0xEA, 0xCF, 0x41, 0xCD, 0x20, 0x50, 0x08, 0x44, 0x8C, 0x0C, 0xD2, 0x24, 0x14, 0xEC, 0x9C, 0xD9, 0xB0, 0xFB, 0x54, 0xD1, 0x28, 0x50, 0x31, 0x92, 0xA7, 0xA5, 0xAB, 0x20, 0x83, 0x88, 0x88, 0xD3, 0xA1, 0x1B, 0xBE, 0xF5, 0x9B, 0x0D, 0xD2, 0x8D, 0x81, 0xD7, 0xD8, 0xB6, 0x29, 0x3C, 0x34, 0x7A, 0xD4, 0x11, 0xA7, 0xD8, 0x17, 0x71, 0xCB, 0xC5, 0xFF, 0x8F, 0xFC, 0xBC, 0x50, 0x20, 0x2E, 0xE6, 0x9F, 0xD0, 0xC5, 0x91, 0xA9, 0x0B, 0x8C, 0xC9, 0xEC, 0x29, 0x49, 0x32, 0xE7, 0xE9, 0x02, 0x28, 0x58, 0x0F, 0xD7, 0x56, 0x48, 0x6C, 0x0B, 0x4A, 0x21, 0x20, 0xA4, 0x98, 0x6E, 0x6F, 0x71, 0xAF, 0xFF, 0x2A, 0xA2, 0x15, 0x75, 0xCD, 0x2F, 0xC4, 0x41, 0x24, 0x6D, 0x62, 0x50, 0xE6, 0xE8, 0x99, 0x40, 0x50, 0x42, 0xE8, 0xA0, 0xC1, 0xFA, 0x19, 0x09, 0x12, 0x3D, 0xF3, 0x98, 0xDC, 0x92, 0xE7, 0xF5, 0x9C, 0x59, 0xAC, 0x18, 0xCE, 0x56, 0x28, 0x94, 0x94, 0xCC, 0x3E, 0x68, 0x65, 0x4F, 0xDC, 0x57, 0x30, 0x77, 0xAE, 0x93, 0xF5, 0xA0, 0x24, 0x12, 0x36, 0xA2, 0x7F, 0xA5, 0x38, 0x15, 0x60, 0x05, 0x81, 0x71, 0x00, 0x99, 0x39, 0x21, 0xE1, 0xF6, 0xCA, 0x44, 0xD0, 0x30, 0xF7, 0x6A, 0xD4, 0x2A, 0x68, 0x16, 0x90, 0xF3, 0x21, 0xDA, 0x7F, 0xDE, 0xB7, 0xB5, 0xEC, 0x7E, 0x79, 0x54, 0x5D, 0xEB, 0x4E, 0xF1, 0xCE, 0x49, 0xBF, 0xB4, 0x8C, 0x70, 0xB5, 0xFA, 0x04, 0x41, 0x96, 0xF3, 0xBA, 0x4E, 0xE4, 0xB0, 0x0B, 0x6C, 0xA3, 0x90, 0xDA, 0x6A, 0xE9, 0x70, 0x48, 0x17, 0x19, 0x45, 0x08, 0x95, 0x58, 0x04, 0x7E, 0x53, 0x0B, 0xAB, 0x17, 0xC3, 0xC7, 0xC2, 0xB9, 0xB6, 0x48, 0x33, 0x4E, 0xCB, 0xF5, 0xBB, 0x5F, 0xCD, 0xFB, 0x4E, 0xAB, 0xC1, 0x68, 0x4D, 0x7C, 0xCD, 0xAC, 0x09, 0x12, 0xAC, 0xC5, 0x12, 0xB2, 0x90, 0xFD, 0x51, 0x49, 0x55, 0x6D, 0x4F, 0xD9, 0x0E, 0x66, 0x39, 0x90, 0x37, 0xDA, 0x08, 0x8B, 0x4B, 0xE2, 0xC5, 0x7D, 0x5C, 0x20, 0xA1, 0x76, 0x16, 0x20, 0xA7, 0x02, 0x57, 0x50, 0x10, 0x8F, 0x2A, 0xD6, 0xC5, 0xE1, 0x61, 0x5F, 0x01, 0xB3, 0x64, 0xC9, 0xFD, 0xD3, 0x13, 0xCD, 0xC3, 0xCB, 0xD0, 0xED, 0x49, 0x42, 0xD1, 0xC0, 0x17, 0xD2, 0x65, 0x49, 0x98, 0xB9, 0x3E, 0xAB, 0xA5, 0x1A, 0x63, 0xAC, 0xAE, 0xB4, 0x24, 0x0A, 0x8F, 0x08, 0xCB, 0xDE, 0x15, 0xDE, 0x33, 0x19, 0x30, 0x88, 0x74, 0xBF, 0x63, 0x5D, 0x11, 0x38, 0x1E, 0xE0, 0xB7, 0xC1, 0x6B, 0x74, 0x30, 0xC2, 0x55, 0x40, 0x7D, 0xEE, 0xB4, 0x41, 0x96, 0x68, 0xD6, 0x6A, 0xF0, 0xDF, 0xBC, 0x02, 0x89, 0xA8, 0x83, 0x78, 0x26, 0x82, 0x5A, 0x8B, 0xE4, 0x0D, 0x4A, 0x99, 0x7A, 0x0A, 0x9B, 0x69, 0x64, 0xE0, 0x35, 0x1B, 0x2E, 0xC3, 0x11, 0x05, 0x7F, 0x3C, 0x85, 0x84, 0x80, 0xDC, 0x75, 0x40, 0x42, 0xF3, 0x33, 0x65, 0xF3, 0x87, 0x14, 0x55, 0xBD, 0x60, 0x03, 0xD5, 0x2D, 0x94, 0xD2, 0x32, 0x98, 0x8D, 0xB7, 0x6A, 0x17, 0x2E, 0xB7, 0xEA, 0xCE, 0x12, 0xA9, 0x33, 0x92, 0x2C, 0xD7, 0x51, 0xB4, 0xE7, 0xA8, 0x49, 0x21, 0x6A, 0x85,
    };
    size_t sigsz = pqc_signature_bsz(p);
    ASSERT_TRUE(
        pqc_sig_create(p, sig.data(), &sigsz, msg, sizeof msg, sk));
    ASSERT_TRUE(
        pqc_sig_verify(p, sig.data(), sig.size(), msg, sizeof msg, pk));
//    ASSERT_EQ(sig, sig_exp);
}
